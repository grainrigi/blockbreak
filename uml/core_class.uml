@startuml

ReflectorCollection "1" *-- "..*" Reflector
CollisionManager ->  ReflectorCollection : Reflectorを取得
CollisionManager --> Reflector : collide\ngetRect

Subject <|-- Ball
Observer <|.. CollisionManager

Subject "1" *- "..*" Observer
Ball <- CollisionManager : getRect\ngiveImpulse

abstract Subject <<Subject>> {
	+addObserver()
	+removeObserver()
	+notifyObservers()
}

interface Observer <<Observer>> {
	+update()
}

class Ball <<Concrete Subject>> {
	+getRect()
	+giveImpulse()
	+move()
}

class CollisionManager <<Concrete Observer>> {
	+update()
}

class ReflectorCollection {
	+addReflector()
	+removeReflector()
}

class Reflector {
	+collide()
	+getRect()
}
@enduml
